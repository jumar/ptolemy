// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 1.1.4322.2032
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
//This source code was auto-generated by MonoXSD
//
namespace Ptolemy.Formats.GPX {
    
    
    /// <remarks>
///
///		GPX documents contain a metadata header, followed by waypoints, routes, and tracks.  You can add your own elements
///		to the extensions section of the GPX document.
///	  
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    [System.Xml.Serialization.XmlRootAttribute("gpx", Namespace="http://www.topografix.com/GPX/1/1", IsNullable=false)]
    public class gpxType {
        
        /// <remarks>
///
///		You must include the version number in your GPX document.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string version;
        
        /// <remarks>
///
///		You must include the name or URL of the software that created your GPX document.  This allows others to
///		inform the creator of a GPX instance document that fails to validate.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string creator;
        
        /// <remarks>
///
///		Metadata about the file.
///	   
///</remarks>
        public metadataType metadata;
        
        /// <remarks>
///
///		A list of waypoints.
///	   
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("wpt")]
        public wptType[] wpt;
        
        /// <remarks>
///
///		A list of routes.
///	   
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("rte")]
        public rteType[] rte;
        
        /// <remarks>
///
///		A list of tracks.
///	   
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("trk")]
        public trkType[] trk;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItem(IsNullable=false)]
        public System.Xml.XmlElement[] extensions;
    }
    
    /// <remarks>
///
///		Information about the GPX file, author, and copyright restrictions goes in the metadata section.  Providing rich,
///		meaningful information about your GPX files allows others to search for and use your GPS data.
///	  
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class metadataType {
        
        /// <remarks>
///
///		The name of the GPX file.
///	   
///</remarks>
        public string name;
        
        /// <remarks>
///
///		A description of the contents of the GPX file.
///	   
///</remarks>
        public string desc;
        
        /// <remarks>
///
///		The person or organization who created the GPX file.
///	   
///</remarks>
        public personType author;
        
        /// <remarks>
///
///		Copyright and license information governing use of the file.
///	   
///</remarks>
        public copyrightType copyright;
        
        /// <remarks>
///
///		URLs associated with the location described in the file.
///	   
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("link")]
        public linkType[] link;
        
        /// <remarks>
///
///		The creation date of the file.
///	   
///</remarks>
        public System.DateTime time;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool timeSpecified;
        
        /// <remarks>
///
///		Keywords associated with the file.  Search engines or databases can use this information to classify the data.
///	   
///</remarks>
        public string keywords;
        
        /// <remarks>
///
///		Minimum and maximum coordinates which describe the extent of the coordinates in the file.
///	   
///</remarks>
        public boundsType bounds;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItem(IsNullable=false)]
        public System.Xml.XmlElement[] extensions;
    }
    
    /// <remarks>
///
///	 A person or organization.
///    
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class personType {
        
        /// <remarks>
///
///		Name of person or organization.
///	  
///</remarks>
        public string name;
        
        /// <remarks>
///
///		Email address.
///	  
///</remarks>
        public emailType email;
        
        /// <remarks>
///
///		Link to Web site or other external information about person.
///	  
///</remarks>
        public linkType link;
    }
    
    /// <remarks>
///
///	 An email address.  Broken into two parts (id and domain) to help prevent email harvesting.
///    
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class emailType {
        
        /// <remarks>
///
///		id half of email address (billgates2004)
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string id;
        
        /// <remarks>
///
///		domain half of email address (hotmail.com)
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string domain;
    }
    
    /// <remarks>
///
///	 A link to an external resource (Web page, digital photo, video clip, etc) with additional information.
///    
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class linkType {
        
        /// <remarks>
///
///		URL of hyperlink.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="", DataType="anyURI")]
        public string href;
        
        /// <remarks>
///
///		Text of hyperlink.
///	  
///</remarks>
        public string text;
        
        /// <remarks>
///
///		Mime type of content (image/jpeg)
///	  
///</remarks>
        public string type;
    }
    
    /// <remarks>
///
///	 Information about the copyright holder and any license governing use of this file.  By linking to an appropriate license,
///	 you may place your data into the public domain or grant additional usage rights.
///    
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class copyrightType {
        
        /// <remarks>
///
///		Copyright holder (TopoSoft, Inc.)
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public string author;
        
        /// <remarks>
///
///		Year of copyright.
///	  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(DataType="gYear")]
        public string year;
        
        /// <remarks>
///
///		Link to external file containing license text.
///	  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI")]
        public string license;
    }
    
    /// <remarks>
///
///	 Two lat/lon pairs defining the extent of an element.
///    
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class boundsType {
        
        /// <remarks>
///
///		The minimum latitude.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public System.Decimal minlat;
        
        /// <remarks>
///
///		The minimum longitude.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public System.Decimal minlon;
        
        /// <remarks>
///
///		The maximum latitude.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public System.Decimal maxlat;
        
        /// <remarks>
///
///		The maximum longitude.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public System.Decimal maxlon;
    }
    
    /// <remarks>
///
///		wpt represents a waypoint, point of interest, or named feature on a map.
///	  
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class wptType {
        
        /// <remarks>
///
///		The latitude of the point.  Decimal degrees, WGS84 datum.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public System.Decimal lat;
        
        /// <remarks>
///
///		The latitude of the point.  Decimal degrees, WGS84 datum.
///	  
///</remarks>
        [System.Xml.Serialization.XmlAttributeAttribute(Namespace="")]
        public System.Decimal lon;
        
        /// <remarks>
///
///			Elevation (in meters) of the point.
///		  
///</remarks>
        public System.Decimal ele;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool eleSpecified;
        
        /// <remarks>
///
///			Creation/modification timestamp for element. Date and time in are in Univeral Coordinated Time (UTC), not local time! Conforms to ISO 8601 specification for date/time representation. Fractional seconds are allowed for millisecond timing in tracklogs. 
///		  
///</remarks>
        public System.DateTime time;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool timeSpecified;
        
        /// <remarks>
///
///			Magnetic variation (in degrees) at the point
///		  
///</remarks>
        public System.Decimal magvar;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool magvarSpecified;
        
        /// <remarks>
///
///			Height (in meters) of geoid (mean sea level) above WGS84 earth ellipsoid.  As defined in NMEA GGA message.
///		  
///</remarks>
        public System.Decimal geoidheight;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool geoidheightSpecified;
        
        /// <remarks>
///
///			The GPS name of the waypoint. This field will be transferred to and from the GPS. GPX does not place restrictions on the length of this field or the characters contained in it. It is up to the receiving application to validate the field before sending it to the GPS.
///		  
///</remarks>
        public string name;
        
        /// <remarks>
///
///			GPS waypoint comment. Sent to GPS as comment. 
///		  
///</remarks>
        public string cmt;
        
        /// <remarks>
///
///			A text description of the element. Holds additional information about the element intended for the user, not the GPS.
///		  
///</remarks>
        public string desc;
        
        /// <remarks>
///
///			Source of data. Included to give user some idea of reliability and accuracy of data.  "Garmin eTrex", "USGS quad Boston North", e.g.
///		  
///</remarks>
        public string src;
        
        /// <remarks>
///
///			Link to additional information about the waypoint.
///		  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("link")]
        public linkType[] link;
        
        /// <remarks>
///
///			Text of GPS symbol name. For interchange with other programs, use the exact spelling of the symbol as displayed on the GPS.  If the GPS abbreviates words, spell them out.
///		  
///</remarks>
        public string sym;
        
        /// <remarks>
///
///			Type (classification) of the waypoint.
///		  
///</remarks>
        public string type;
        
        /// <remarks>
///
///			Type of GPX fix.
///		  
///</remarks>
        public fixType fix;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool fixSpecified;
        
        /// <remarks>
///
///			Number of satellites used to calculate the GPX fix.
///		  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string sat;
        
        /// <remarks>
///
///			Horizontal dilution of precision.
///		  
///</remarks>
        public System.Decimal hdop;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool hdopSpecified;
        
        /// <remarks>
///
///			Vertical dilution of precision.
///		  
///</remarks>
        public System.Decimal vdop;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool vdopSpecified;
        
        /// <remarks>
///
///			Position dilution of precision.
///		  
///</remarks>
        public System.Decimal pdop;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool pdopSpecified;
        
        /// <remarks>
///
///			Number of seconds since last DGPS update.
///		  
///</remarks>
        public System.Decimal ageofdgpsdata;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnore()]
        public bool ageofdgpsdataSpecified;
        
        /// <remarks>
///
///			ID of DGPS station used in differential correction.
///		  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string dgpsid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItem(IsNullable=false)]
        public System.Xml.XmlElement[] extensions;
    }
    
    /// <remarks>
///
///		Type of GPS fix.  none means GPS had no fix.  To signify "the fix info is unknown, leave out fixType entirely. pps = military signal used
///	  
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public enum fixType {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("2d")]
        Item2d,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("3d")]
        Item3d,
        
        /// <remarks/>
        dgps,
        
        /// <remarks/>
        pps,
    }
    
    /// <remarks>
///
///		rte represents route - an ordered list of waypoints representing a series of turn points leading to a destination.
///	  
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class rteType {
        
        /// <remarks>
///
///			GPS name of route.
///		  
///</remarks>
        public string name;
        
        /// <remarks>
///
///			GPS comment for route.
///		  
///</remarks>
        public string cmt;
        
        /// <remarks>
///
///			Text description of route for user.  Not sent to GPS.
///		  
///</remarks>
        public string desc;
        
        /// <remarks>
///
///			Source of data. Included to give user some idea of reliability and accuracy of data.
///		  
///</remarks>
        public string src;
        
        /// <remarks>
///
///			Links to external information about the route.
///		  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("link")]
        public linkType[] link;
        
        /// <remarks>
///
///			GPS route number.
///		  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string number;
        
        /// <remarks>
///
///			Type (classification) of route.
///		  
///</remarks>
        public string type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItem(IsNullable=false)]
        public System.Xml.XmlElement[] extensions;
        
        /// <remarks>
///
///		A list of route points.
///	   
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("rtept")]
        public wptType[] rtept;
    }
    
    /// <remarks>
///
///		trk represents a track - an ordered list of points describing a path.
///	  
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class trkType {
        
        /// <remarks>
///
///			GPS name of track.
///		  
///</remarks>
        public string name;
        
        /// <remarks>
///
///			GPS comment for track.
///		  
///</remarks>
        public string cmt;
        
        /// <remarks>
///
///			User description of track.
///		  
///</remarks>
        public string desc;
        
        /// <remarks>
///
///			Source of data. Included to give user some idea of reliability and accuracy of data.
///		  
///</remarks>
        public string src;
        
        /// <remarks>
///
///			Links to external information about track.
///		  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("link")]
        public linkType[] link;
        
        /// <remarks>
///
///			GPS track number.
///		  
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger")]
        public string number;
        
        /// <remarks>
///
///			Type (classification) of track.
///		  
///</remarks>
        public string type;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItem(IsNullable=false)]
        public System.Xml.XmlElement[] extensions;
        
        /// <remarks>
///
///		A Track Segment holds a list of Track Points which are logically connected in order. To represent a single GPS track where GPS reception was lost, or the GPS receiver was turned off, start a new Track Segment for each continuous span of track data.
///	   
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("trkseg")]
        public trksegType[] trkseg;
    }
    
    /// <remarks>
///
/// 	 A Track Segment holds a list of Track Points which are logically connected in order. To represent a single GPS track where GPS reception was lost, or the GPS receiver was turned off, start a new Track Segment for each continuous span of track data.
///    
///</remarks>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.topografix.com/GPX/1/1")]
    public class trksegType {
        
        /// <remarks>
///
///		A Track Point holds the coordinates, elevation, timestamp, and metadata for a single point in a track.
///	   
///</remarks>
        [System.Xml.Serialization.XmlElementAttribute("trkpt")]
        public wptType[] trkpt;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItem(IsNullable=false)]
        public System.Xml.XmlElement[] extensions;
    }
}
